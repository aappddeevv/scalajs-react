# -*- mode: snippet -*-
# Author: aappddeevv
# name: statelesswithstyles
# key: statelesswithstyles
# --

// WIP, need to add getStyles, getNames

trait ${1:enumerate}Styles extends js.Object {
  var root: js.UndefOr[IStyle} = js.undefined
}

trait ${1}ClassNames extends js.Object {
  var root: String
}

trait ${1}Props extends js.Object {
  var className: js.UndefOr[String] = js.undefined
  var styles: js.UndefOr[] = js.undefined  
}

object ${1:enumerate} {
  val Nam = "$1"

  trait Props extends js.Object {
  }

  def apply(props: Props) = sfc1(props)

  val sfc = SFC1[Props] { props =>
     val styles = getStyles(props.map(_.styles).getOrElse(js.undefined))
     val cn = getClassNams(props.map(_.className), styles)
     div(new IDivProps {
         className = cn.root
     })("component $1")
   }

}
