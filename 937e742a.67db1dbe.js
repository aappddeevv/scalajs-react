(window.webpackJsonp=window.webpackJsonp||[]).push([[22],{122:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return i})),n.d(t,"metadata",(function(){return s})),n.d(t,"rightToc",(function(){return c})),n.d(t,"default",(function(){return p}));var r=n(1),a=n(6),o=(n(0),n(143)),i={id:"redux",title:"Redux"},s={id:"topics/redux",title:"Redux",description:"The scalajs-reaction integration is not designed to create or write middleware",source:"@site/docs/topics/redux.md",permalink:"/scalajs-reaction/docs/topics/redux",editUrl:"https://github.com/aappddeevv/scalar2020online/edit/master/presentation/docs/topics/redux.md",sidebar:"docs",previous:{title:"Routing",permalink:"/scalajs-reaction/docs/topics/routing"},next:{title:"Data Validation",permalink:"/scalajs-reaction/docs/topics/data_validation"}},c=[{value:"Scala Side Example",id:"scala-side-example",children:[]}],l={rightToc:c};function p(e){var t=e.components,n=Object(a.a)(e,["components"]);return Object(o.b)("wrapper",Object(r.a)({},l,n,{components:t,mdxType:"MDXLayout"}),Object(o.b)("p",null,"The scalajs-reaction integration is not designed to create or write middleware\nin scalajs-reaction. There are some other scala.js libraries that can provide\nfull access to the redux API. Two projects in particular are:"),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},Object(o.b)("a",Object(r.a)({parentName:"li"},{href:"https://github.com/eldis/scalajs-redux"}),"https://github.com/eldis/scalajs-redux")),Object(o.b)("li",{parentName:"ul"},Object(o.b)("a",Object(r.a)({parentName:"li"},{href:"https://github.com/shogowada/scalajs-reactjs"}),"https://github.com/shogowada/scalajs-reactjs"))),Object(o.b)("p",null,"Both of these contain redux and full scala.js react integration layers. For\nexample, you can define a redux store in scala using those libraries."),Object(o.b)("p",null,"Since this facade is based on hooks, you can use the relatively simply hooks\nfacade to use redux inside your scala.js defined components."),Object(o.b)("p",null,"At its core, ",Object(o.b)("inlineCode",{parentName:"p"},"react-redux"),", the react integration layer with redux, creates\nan intermediate component that:"),Object(o.b)("ol",null,Object(o.b)("li",{parentName:"ol"},'Obtains the store from the context (or props if\nthey are passed down with the name "store" or it finds the storeKey).'),Object(o.b)("li",{parentName:"ol"},"Calls mapStateToProps (with the redux state and your component's props)  calls\nmapDispatchToProps (dispatch func and your component's props) ."),Object(o.b)("li",{parentName:"ol"},"Sets the the state of the wrapper component (called Connect) that\n",Object(o.b)("inlineCode",{parentName:"li"},"react-redux")," creates. It uses a dummy state. The setState call in Connect\nforces it and its children to render.")),Object(o.b)("p",null,"The magic is that react-redux tries to memoize the results so that it reduces\nthe number of renders in your component if the state changes but those changes\ndo not change the merged set of props."),Object(o.b)("p",null,'Memoizing a function means that a function remembers (stores) its previous input\nand on the next function call if the input has not changed, it returns the same\nresult. Of course, this means the function stores state and potentially holds\nonto large amounts of "input" data as well as previousu results--all of which\ninflates memory usage.'),Object(o.b)("p",null,Object(o.b)("inlineCode",{parentName:"p"},"react-redux")," also uses a Subscription object to subscribe to events hold a link\nto their parent subscription and managed the unsubscribe process in the correct\norder (child to parent)."),Object(o.b)("p",null,"On the scala side, we just need to define our component and use the react-redux\nhooks API provided."),Object(o.b)("h2",{id:"scala-side-example"},"Scala Side Example"),Object(o.b)("p",null,"To preserve integration on the scala side, you have to do the same type of\nmapping from redux state to props."),Object(o.b)("pre",null,Object(o.b)("code",Object(r.a)({parentName:"pre"},{}),"import react_redux\nimport react._\n\n// mimic the definition in js\n@js.native\ntrait GlobalAppState extends js.Object {\n   val label: js.UndefOr[String] = js.undefined\n}\n\nobject MyComponent {\n    trait Props extends js.Object { \n       // ...\n    }\n\n    def apply(props: Props) = sfc(props)\n    \n    val sfc = SFC1[Props] { props =>\n      val label = \n          ReactRedux.useSelector[GlobalAppState, js.UndefOr[String]](_.label)\n      // other react-redux calls such is ReactRedux.useDispatch[GlobalAction]()\n      div(label)\n    }\n}\n")),Object(o.b)("p",null,"That's all you need to do. Just like with importing, if you choose your props\ncarefully, you can reduce your API data swizzling work significantly if your\nprops are js friendly, but its up to you."),Object(o.b)("p",null,"Also, note that the ",Object(o.b)("inlineCode",{parentName:"p"},"apply")," function in the example above takes no children. If\nit had, we would have added a second parameter list (or to the first parameter\nlist) or added children explicitly to the ",Object(o.b)("inlineCode",{parentName:"p"},"Props")," trait. It's up to you on how\nyou want to structure your internal API."))}p.isMDXComponent=!0},143:function(e,t,n){"use strict";n.d(t,"a",(function(){return u})),n.d(t,"b",(function(){return h}));var r=n(0),a=n.n(r);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=a.a.createContext({}),p=function(e){var t=a.a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):s({},t,{},e)),n},u=function(e){var t=p(e.components);return a.a.createElement(l.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.a.createElement(a.a.Fragment,{},t)}},b=Object(r.forwardRef)((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,i=e.parentName,l=c(e,["components","mdxType","originalType","parentName"]),u=p(n),b=r,h=u["".concat(i,".").concat(b)]||u[b]||d[b]||o;return n?a.a.createElement(h,s({ref:t},l,{components:n})):a.a.createElement(h,s({ref:t},l))}));function h(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,i=new Array(o);i[0]=b;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s.mdxType="string"==typeof e?e:r,i[1]=s;for(var l=2;l<o;l++)i[l]=n[l];return a.a.createElement.apply(null,i)}return a.a.createElement.apply(null,n)}b.displayName="MDXCreateElement"}}]);