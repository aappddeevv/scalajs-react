(window.webpackJsonp=window.webpackJsonp||[]).push([[28],{127:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return c})),n.d(t,"metadata",(function(){return s})),n.d(t,"rightToc",(function(){return p})),n.d(t,"default",(function(){return l}));var o=n(1),a=n(6),r=(n(0),n(143)),c={id:"creating",title:"Defining Components"},s={id:"core/creating",title:"Defining Components",description:"Use the hooks pattern to define your components. This approach puts you close to",source:"@site/docs/core/creating.md",permalink:"/scalajs-reaction/docs/core/creating",editUrl:"https://github.com/aappddeevv/scalar2020online/edit/master/presentation/docs/core/creating.md",sidebar:"docs",previous:{title:"Getting Started",permalink:"/scalajs-reaction/docs/intro/using"},next:{title:"Virtual DOM",permalink:"/scalajs-reaction/docs/core/vdom"}},p=[{value:"Components",id:"components",children:[]},{value:"Components with <code>Props[T]</code>",id:"components-with-propst",children:[]},{value:"Stateful Components",id:"stateful-components",children:[]},{value:"Attributes",id:"attributes",children:[]},{value:"Child Elements",id:"child-elements",children:[]}],i={rightToc:p};function l(e){var t=e.components,n=Object(a.a)(e,["components"]);return Object(r.b)("wrapper",Object(o.a)({},i,n,{components:t,mdxType:"MDXLayout"}),Object(r.b)("p",null,"Use the hooks pattern to define your components. This approach puts you close to\nthe bare metal JS syntax needed to create hooks. scalajs-reaction provides some\nconvenience conversions and functions to make this easier and typesafe."),Object(r.b)("p",null,"To understand the API you can look at the\n",Object(r.b)("a",Object(o.a)({parentName:"p"},{href:"https://reasonml.github.io/reason-react"}),"ReasonReact")," docs to understand the\napproach to creating Components in scala.js."),Object(r.b)("p",null,"In the next section, we show the stateless component. Look at the\ndemo code for an example of using a reducer component, a component that manages\nstate."),Object(r.b)("p",null,"Some good tutorials on react hooks and how to use them can be found at:"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",Object(o.a)({parentName:"li"},{href:"https://overreacted.io/a-complete-guide-to-useeffect"}),"https://overreacted.io/a-complete-guide-to-useeffect")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",Object(o.a)({parentName:"li"},{href:"https://www.robinwieruch.de/react-hooks-fetch-data"}),"https://www.robinwieruch.de/react-hooks-fetch-data")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",Object(o.a)({parentName:"li"},{href:"https://itnext.io/how-to-create-react-custom-hooks-for-data-fetching-with-useeffect-74c5dc47000a"}),"https://itnext.io/how-to-create-react-custom-hooks-for-data-fetching-with-useeffect-74c5dc47000a")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",Object(o.a)({parentName:"li"},{href:"https://www.codebeast.dev/react-memoize-hooks-useRef-useCallback-useMemo"}),"https://www.codebeast.dev/react-memoize-hooks-useRef-useCallback-useMemo")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",Object(o.a)({parentName:"li"},{href:"https://blog.logrocket.com/react-hooks-cheat-sheet-unlock-solutions-to-common-problems-af4caf699e70"}),"https://blog.logrocket.com/react-hooks-cheat-sheet-unlock-solutions-to-common-problems-af4caf699e70")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",Object(o.a)({parentName:"li"},{href:"https://usehooks.com/"}),"https://usehooks.com/"))),Object(r.b)("h2",{id:"components"},"Components"),Object(r.b)("p",null,"The easiest way to create a component is to use a simple function."),Object(r.b)("pre",null,Object(r.b)("code",Object(o.a)({parentName:"pre"},{className:"language-scala"}),'object Component1 {\n    // defining apply so you call Component1() to create.\n    def apply() = render()\n    val render: ReactFC0 = () => div("hello world")\n}\n\n\nobject Component2 {\n  val NAME = "Component2"\n   trait Props extends js.Object {\n     var p: js.UndefOr[String] = js.undefined\n   }\n\n   def apply(props:Props) = render.elementWith(props)\n\n   val render: ReactFC[Props] = props =>\n      div(s"""hello world ${p.getOrElse("no-arg")""")\n   render.displayName(NAME)\n}\n')),Object(r.b)("p",null,"The components must be converted to a ReactNode for rendering so you\nneed both the component definition (in this case the ",Object(r.b)("inlineCode",{parentName:"p"},"render"),' function)\nand some props together to pass along to react. React requires that you\nprovide a "description" and "data" on how to render a component but\nensure that you do not "run" the rendering function to actually create the\ncomponent. React will put the rendering function and props together\nat the right time for you. To create the "description" you need some\nway for scala to detect that it has both parts. ',Object(r.b)("inlineCode",{parentName:"p"},".elementWith"),"\nis one way to do that but you could just call ",Object(r.b)("inlineCode",{parentName:"p"},"createElement")," yourself, see below."),Object(r.b)("p",null,"Hence, you do not to use ",Object(r.b)("inlineCode",{parentName:"p"},"ReactFC0")," or ",Object(r.b)("inlineCode",{parentName:"p"},"ReactFC"),". Define your render function as a\nnormal javascript function ",Object(r.b)("inlineCode",{parentName:"p"},"js.Function1[Props, ReactNode]")," directly.\nThe types ",Object(r.b)("inlineCode",{parentName:"p"},"ReactFC")," force a conversion from a scala function to\na javascript function. That's all it does."),Object(r.b)("p",null,"In the above ",Object(r.b)("inlineCode",{parentName:"p"},"def apply(props: Props) = render.elementWith(props)")," there is\nan implicit helper that provides the ",Object(r.b)("inlineCode",{parentName:"p"},".elementWith")," syntax on a scala or\njavascript function ",Object(r.b)("inlineCode",{parentName:"p"},"Props => ReactNode"),"."),Object(r.b)("p",null,"You can skip all of this by defining directly:"),Object(r.b)("pre",null,Object(r.b)("code",Object(o.a)({parentName:"pre"},{className:"language-scala"}),'  def apply(props: Props) = createElement(render, props)\n  val render: js.Function1[Props, ReactNode] = props => div("hello world")\n')),Object(r.b)("p",null,"The reason you need to specify a few types it the right places is to\nactivate the syntax or implicit conversions. Scala function to javascript\nfunction conversion is part of scala.js predef so it happens automatically.\nBut to ensure that a ",Object(r.b)("inlineCode",{parentName:"p"},'div("hello world")')," is converted to a ",Object(r.b)("inlineCode",{parentName:"p"},"ReactNode"),"\n(the return type of your function)\nyou need to set the return type of ",Object(r.b)("inlineCode",{parentName:"p"},"render")," so that another implicit will\npick up the ",Object(r.b)("inlineCode",{parentName:"p"},"div")," declaration in the ",Object(r.b)("inlineCode",{parentName:"p"},"vdom")," library and convert that\nto a ",Object(r.b)("inlineCode",{parentName:"p"},"ReactNode")," via ",Object(r.b)("inlineCode",{parentName:"p"},"createElement"),"."),Object(r.b)("p",null,"Another implicit conversion is provided so you can also\nautomatically convert a tuple of the component and props:"),Object(r.b)("pre",null,Object(r.b)("code",Object(o.a)({parentName:"pre"},{className:"language-scala"}),"// use this anywhere a ReactNode is expected\n(component2, new Props {...})\n")),Object(r.b)("p",null,"A nice benefit of using simple functions is that you can easily export them\nfor use in the\njs/ts side of your application assuming the parameter is js friendly."),Object(r.b)("p",null,"Here's a tuple way to define your component using the tuple\nconcept above. The ",Object(r.b)("inlineCode",{parentName:"p"},"ReactElementTuple")," helps coerce ",Object(r.b)("inlineCode",{parentName:"p"},"render"),"\nto a javascript function, that's all it does."),Object(r.b)("pre",null,Object(r.b)("code",Object(o.a)({parentName:"pre"},{className:"language-scala"}),'object Components {\n  trait Props extends js.Object { val name: String }\n\n  // need this type signature\n  val render: Props => ReactNode = props => div(s"hello ${name}")\n\n  // Call like Components.HelloWorld(...)\n  def HelloWorld(props: Props): ReactElementTuple[Props] = (render, props)\n')),Object(r.b)("p",null,"You could also use:"),Object(r.b)("pre",null,Object(r.b)("code",Object(o.a)({parentName:"pre"},{className:"language-scala"}),"  // use any name you want as long it makes you happy!\n\n  // Call like Components(theProps)\n  def apply(props: Props) = render.elementWith(props)\n\n  // Call like Components.make(theProps)\n  def make(props: Props) = render.elementWith(props)\n\n  // Call like Components.doit(props),\n  def doit(props: Props) = render.toEl(props)\n")),Object(r.b)("p",null,Object(r.b)("inlineCode",{parentName:"p"},".toEl")," is an alias for to ",Object(r.b)("inlineCode",{parentName:"p"},".elementWith"),"."),Object(r.b)("p",null,"You can define your own protocol for creating a component as long as:"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},"Your component is a js function or is converted to a js function."),Object(r.b)("li",{parentName:"ul"},'You separate out the "component" and the props in a way that allows\n',Object(r.b)("inlineCode",{parentName:"li"},"react.createElement")," to be called.")),Object(r.b)("p",null,"This facade provides a few implicit conversions to improve type inference\nand calling ",Object(r.b)("inlineCode",{parentName:"p"},"createElement")," at the right time. That's pretty much all\nthis facade does."),Object(r.b)("h2",{id:"components-with-propst"},"Components with ",Object(r.b)("inlineCode",{parentName:"h2"},"Props[T]")),Object(r.b)("p",null,"If your ",Object(r.b)("inlineCode",{parentName:"p"},"Props")," takes a ",Object(r.b)("inlineCode",{parentName:"p"},"T"),", you can create a class:"),Object(r.b)("pre",null,Object(r.b)("code",Object(o.a)({parentName:"pre"},{className:"language-scala"}),"class MyComponent[T] {\n // component stuff here like above\n}\n")),Object(r.b)("p",null,"If you want to keep the ",Object(r.b)("inlineCode",{parentName:"p"},"T")," close to the render function\nyou need to create the parameterized render but also\na stable value:"),Object(r.b)("pre",null,Object(r.b)("code",Object(o.a)({parentName:"pre"},{className:"language-scala"}),"class MyComponent {\n   trait Props[T] extends js.Object {\n     val items: js.UndefOr[js.Array[T]] = js.undefined\n   }\n\n   def apply[T](props: Props[T]) = stable_render.elementWith(props)\n   \n   def render[T]: ReactFC[Props[T]] = props => { ... }\n   def stable_render: ScalaJSFunctionComponent1 = render[js.Object]   \n}\n")),Object(r.b)("p",null,"So pushing down the ",Object(r.b)("inlineCode",{parentName:"p"},"T")," from the class costs you 1 extra line\nof code to stablize the value."),Object(r.b)("h2",{id:"stateful-components"},"Stateful Components"),Object(r.b)("p",null,"Since the API is based on hooks, just use the hooks ",Object(r.b)("inlineCode",{parentName:"p"},"useState")," or ",Object(r.b)("inlineCode",{parentName:"p"},"useReducer"),"\nhooks inside your component. You can define your own hooks using standard\nscala functions, they do not have to be javascript functions."),Object(r.b)("h2",{id:"attributes"},"Attributes"),Object(r.b)("p",null,'A component\'s props can take either a list of attributes or an\nobject that bundles the attributes together. You can choose how you want to\ndefine the make parameters. If you define your non-native JS traits\nwith vars you can create\nthem without having to use "override val" syntax:'),Object(r.b)("pre",null,Object(r.b)("code",Object(o.a)({parentName:"pre"},{className:"language-scala"}),"trait MyOpts extends js.Object {\n  var prop1: js.UndefOr[String] = js.undefined\n  var prop2: js.UndefOr[String] = js.undefined\n}\n")),Object(r.b)("p",null,'You can create your props using "new" and without the "val" or "override"\nkeywords:'),Object(r.b)("pre",null,Object(r.b)("code",Object(o.a)({parentName:"pre"},{className:"language-scala"}),'new MyOpts {\n  prop1 = "foo",\n  prop2 = "bar"\n}\n')),Object(r.b)("p",null,"instead of:"),Object(r.b)("pre",null,Object(r.b)("code",Object(o.a)({parentName:"pre"},{className:"language-scala"}),'new MyOpts {\n  override val prop1 = "foo"\n  override val prop2 = "bar"\n}\n')),Object(r.b)("p",null,"Scala 3 should allow you to create these javascript objects (that's what they\nare under the hood) without needing to use the word new. You could also define\na companion object and define a constructor function that is more ergonomic."),Object(r.b)("p",null,"In order to allow your props to contain other attributes, such as those from\ndiv, just have your props inherit from the appropriate attributes trait that is\nprovided:"),Object(r.b)("pre",null,Object(r.b)("code",Object(o.a)({parentName:"pre"},{className:"language-scala"}),"trait MyOpts extends HTMLAttributes[dom.html.Div] {\n   // your extra traits\n}\n")),Object(r.b)("p",null,"You may need to filter your props so you can access only your attributes. See\noffice-ui-fabric-react for an example of a filtering function\n."),Object(r.b)("h2",{id:"child-elements"},"Child Elements"),Object(r.b)("p",null,"Include a children property in your ",Object(r.b)("inlineCode",{parentName:"p"},"Props")," object. That's it."),Object(r.b)("p",null,"If you wish, you could alter your API slightly to make it more friendly."),Object(r.b)("p",null,"For example, here's a component that exposes a children property but its awkward\nsometimes to use it that way."),Object(r.b)("pre",null,Object(r.b)("code",Object(o.a)({parentName:"pre"},{className:"language-scala"}),"object Component {\n\n  trait Props extends js.Object {\n    val children: ReactNode\n  }\n\n  def apply(props: Props) = render.elementWith(props)\n\n  val render = Props => ReactNode = ???\n}\n")),Object(r.b)("p",null,"You can use scala's standard multiple parameter lists feature\nto produces a more\nergonomic API. The children must still be explicit in the ",Object(r.b)("inlineCode",{parentName:"p"},"Props")," type if\nyou want to access them."),Object(r.b)("pre",null,Object(r.b)("code",Object(o.a)({parentName:"pre"},{className:"language-scala"}),"object Component {\n  trait Props extends js.Object {\n    val arg: Int\n    var children: js.Undefined[ReactNode] = js.undefined\n  }\n\n  // ergonomic API\n  def apply(props: Props)(children: ReactNode*) = react.createElementN(render, props)(children:_*)\n\n  val render: Props => ReactNode = ???\n}\n")))}l.isMDXComponent=!0},143:function(e,t,n){"use strict";n.d(t,"a",(function(){return u})),n.d(t,"b",(function(){return m}));var o=n(0),a=n.n(o);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function c(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?c(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):c(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function p(e,t){if(null==e)return{};var n,o,a=function(e,t){if(null==e)return{};var n,o,a={},r=Object.keys(e);for(o=0;o<r.length;o++)n=r[o],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(o=0;o<r.length;o++)n=r[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var i=a.a.createContext({}),l=function(e){var t=a.a.useContext(i),n=t;return e&&(n="function"==typeof e?e(t):s({},t,{},e)),n},u=function(e){var t=l(e.components);return a.a.createElement(i.Provider,{value:t},e.children)},b={inlineCode:"code",wrapper:function(e){var t=e.children;return a.a.createElement(a.a.Fragment,{},t)}},d=Object(o.forwardRef)((function(e,t){var n=e.components,o=e.mdxType,r=e.originalType,c=e.parentName,i=p(e,["components","mdxType","originalType","parentName"]),u=l(n),d=o,m=u["".concat(c,".").concat(d)]||u[d]||b[d]||r;return n?a.a.createElement(m,s({ref:t},i,{components:n})):a.a.createElement(m,s({ref:t},i))}));function m(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var r=n.length,c=new Array(r);c[0]=d;var s={};for(var p in t)hasOwnProperty.call(t,p)&&(s[p]=t[p]);s.originalType=e,s.mdxType="string"==typeof e?e:o,c[1]=s;for(var i=2;i<r;i++)c[i]=n[i];return a.a.createElement.apply(null,c)}return a.a.createElement.apply(null,n)}d.displayName="MDXCreateElement"}}]);