(window.webpackJsonp=window.webpackJsonp||[]).push([[22],{58:function(e,n,t){"use strict";t.r(n),t.d(n,"frontMatter",function(){return s}),t.d(n,"rightToc",function(){return i}),t.d(n,"default",function(){return l});t(0);var a=t(92);function r(){return(r=Object.assign||function(e){for(var n=1;n<arguments.length;n++){var t=arguments[n];for(var a in t)Object.prototype.hasOwnProperty.call(t,a)&&(e[a]=t[a])}return e}).apply(this,arguments)}function o(e,n){if(null==e)return{};var t,a,r=function(e,n){if(null==e)return{};var t,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)t=o[a],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)t=o[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var s={id:"importing",title:"Importing from JS to Scala"},i=[{value:"Managing Javascript Props",id:"managing-javascript-props",children:[]},{value:"Import Typescript SFC",id:"import-typescript-sfc",children:[]},{value:"Typescript",id:"typescript",children:[]}],p={rightToc:i},c="wrapper";function l(e){var n=e.components,t=o(e,["components"]);return Object(a.b)(c,r({},p,t,{components:n,mdxType:"MDXLayout"}),Object(a.b)("p",null,'Importing a component javascript means you need to create a "Component" in\nscala. There is a simple function call to do that for you. You still need to\nperform the scala.js ',Object(a.b)("inlineCode",{parentName:"p"},"@JSImport"),"."),Object(a.b)("pre",null,Object(a.b)("code",r({parentName:"pre"},{className:"language-scala"}),'// import a react component exported as part of a namespace export\n// perhaps mark the import private\n@js.native\n@JSImport("some-lib", JSImport.Namespace)\nobject SomeLibNS {\n  val YourComponent1: ReactJSComponent = js.native\n  val YourComponent2: ReactJSComponent = js.native\n}\n\nobject SomeLib {\n  def YourComponent1(props: Props*)(children: ReactNode*) = \n     createElement(SomeLibNS.YourComponent1, props)(children:_*)\n}\n')),Object(a.b)("p",null,"How you hook up attributes and children values to your component is up to\nyou. The definition in SomeLib is what you want it to be. In typescript, it is\ncommon to define an interface that declares the allowed properties to be passed\nin. The equivalent in scala.js are JS traits. You will want to make them\nnon-native JS traits so you can instantiate them."),Object(a.b)("h2",null,Object(a.b)("a",r({parentName:"h2"},{"aria-hidden":!0,className:"anchor",id:"managing-javascript-props"})),Object(a.b)("a",r({parentName:"h2"},{"aria-hidden":!0,className:"hash-link",href:"#managing-javascript-props"}),"#"),"Managing Javascript Props"),Object(a.b)("p",null,"If you need to include additional HTML specific props, you can use the vdom\npackage. Let's say you want to be able to pass in any HTML element properties to\nyour component."),Object(a.b)("pre",null,Object(a.b)("code",r({parentName:"pre"},{className:"language-scala"}),"import ttg.react.vdom._\n\ntrait YourComponent1 extends HTMLAttributes[dom.html.Element] {\n  // className already declared in HTMLAttributes.\n}\n")),Object(a.b)("h2",null,Object(a.b)("a",r({parentName:"h2"},{"aria-hidden":!0,className:"anchor",id:"import-typescript-sfc"})),Object(a.b)("a",r({parentName:"h2"},{"aria-hidden":!0,className:"hash-link",href:"#import-typescript-sfc"}),"#"),"Import Typescript SFC"),Object(a.b)("p",null,"A stateless functional component is just a function. However, react can take a\nfunction definition in its ",Object(a.b)("inlineCode",{parentName:"p"},"React.createElement"),' API. Hence, you can import a\nSFC and just "label" it a ',Object(a.b)("inlineCode",{parentName:"p"},"ReactJSComponent"),". Here's an example:"),Object(a.b)("pre",null,Object(a.b)("code",r({parentName:"pre"},{className:"language-typescript"}),'import * as React from "react"\nimport { Address } from "./datamodel"\nimport cx = require("classnames")\n\nexport interface Props {\n    className?: string | null\n    address?: Address | null\n}\n\n/** Summarize address. */\nexport const AddressSummary: React.SFC<Address> = (props?: Props) => {\n    props = props || {}\n    const name = (props && props.address && props.address.name) || "<unnamed address>"\n    return (\n        <div className={cx("addressSummary", props.className)}>\n            Typescript sourced: Address Summary: {name}\n        </div>\n    )\n}\n')),Object(a.b)("p",null,Object(a.b)("inlineCode",{parentName:"p"},"Address")," is defined in typescript language and represents an interface you need\nto type in:"),Object(a.b)("pre",null,Object(a.b)("code",r({parentName:"pre"},{className:"language-typescript"}),"// We have to define this on the scala.js and typescript side.\nexport interface Address {\n    customeraddressid: string | null\n    name?: string | null\n    city?: string | null\n    stateorprovince?: string | null\n    postalcode?: string | null\n}\n")),Object(a.b)("p",null,"The key thing to notice is that the SFC takes a js object with two optional\nparameters. Let's import it into scala.js"),Object(a.b)("pre",null,Object(a.b)("code",r({parentName:"pre"},{className:"language-scala"}),'import scala.scalajs.js\nimport js.annotation.JSImport\nimport react._\nimport js.Dynamic.literal\nimport js.JSConverters._\n\n@js.native\n@JSImport("JSExamples/AddressSummary", JSImport.Namespace)\nobject AddressSummaryNS extends js.Object {\n  val AddressSummary: ReactJSComponent = js.native\n}\n\n// model null explicitly or could use syntax extensions\n// such as `.toNonNullOption`.\ntrait Props extends js.Object {\n   var className: js.UndefOr[String | Null]\n   var address: js.UndefOr[Address | Null]\n}\n\ntrait Address extends js.Object {\n   // ...\n}\n\nobject AddressSummary {\n  def apply(props: Props) = createElement0(AddressSummaryNS.AddressSummary, props)\n}\n')),Object(a.b)("p",null,"The ",Object(a.b)("inlineCode",{parentName:"p"},"0")," indicates that ",Object(a.b)("inlineCode",{parentName:"p"},"React.createElement")," takes no children and is provided\nas API so you avoid appending a useless ",Object(a.b)("inlineCode",{parentName:"p"},"()"),"."),Object(a.b)("h2",null,Object(a.b)("a",r({parentName:"h2"},{"aria-hidden":!0,className:"anchor",id:"typescript"})),Object(a.b)("a",r({parentName:"h2"},{"aria-hidden":!0,className:"hash-link",href:"#typescript"}),"#"),"Typescript"),Object(a.b)("p",null,"If you have typescript definitions you may want to try to convert them to a\nnative JS trait. There are converters you can try:"),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},Object(a.b)("a",r({parentName:"li"},{href:"https://github.com/DefinitelyTyped/DefinitelyTyped"}),"definitely typed")),Object(a.b)("li",{parentName:"ul"},Object(a.b)("a",r({parentName:"li"},{href:"https://github.com/sjrd/scala-js-ts-importer"}),"scala-js-ts-importer"))),Object(a.b)("p",null,"You may find that for complicated libraries the conversion is not accurate and\nyou still need hand editing or that the conversion fails."))}l.isMDXComponent=!0},92:function(e,n,t){"use strict";t.d(n,"a",function(){return i}),t.d(n,"b",function(){return m});var a=t(0),r=t.n(a),o=r.a.createContext({}),s=function(e){var n=r.a.useContext(o),t=n;return e&&(t="function"==typeof e?e(n):Object.assign({},n,e)),t},i=function(e){var n=s(e.components);return r.a.createElement(o.Provider,{value:n},e.children)},p="mdxType",c={inlineCode:"code",wrapper:function(e){return r.a.createElement(r.a.Fragment,{},e.children)}},l=function(e){var n=e.components,t=e.mdxType,a=e.originalType,o=e.parentName,i=function(e,n){var t={};for(var a in e)Object.prototype.hasOwnProperty.call(e,a)&&-1===n.indexOf(a)&&(t[a]=e[a]);return t}(e,["components","mdxType","originalType","parentName"]),p=s(n);return r.a.createElement(p[o+"."+t]||p[t]||c[t]||a,n?Object.assign({},i,{components:n}):i)};function m(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var o=t.length,s=new Array(o);s[0]=l;var i={};for(var c in n)hasOwnProperty.call(n,c)&&(i[c]=n[c]);i.originalType=e,i[p]="string"==typeof e?e:a,s[1]=i;for(var m=2;m<o;m++)s[m]=t[m];return r.a.createElement.apply(null,s)}return r.a.createElement.apply(null,t)}l.displayName="MDXCreateElement"}}]);